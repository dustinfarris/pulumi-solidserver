// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package solidserver

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type VLAN struct {
	s *pulumi.ResourceState
}

// NewVLAN registers a new resource with the given unique name, arguments, and options.
func NewVLAN(ctx *pulumi.Context,
	name string, args *VLANArgs, opts ...pulumi.ResourceOpt) (*VLAN, error) {
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.VlanDomain == nil {
		return nil, errors.New("missing required argument 'VlanDomain'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["name"] = nil
		inputs["requestId"] = nil
		inputs["vlanDomain"] = nil
	} else {
		inputs["name"] = args.Name
		inputs["requestId"] = args.RequestId
		inputs["vlanDomain"] = args.VlanDomain
	}
	inputs["vlanId"] = nil
	s, err := ctx.RegisterResource("solidserver:index/vLAN:VLAN", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &VLAN{s: s}, nil
}

// GetVLAN gets an existing VLAN resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVLAN(ctx *pulumi.Context,
	name string, id pulumi.ID, state *VLANState, opts ...pulumi.ResourceOpt) (*VLAN, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["name"] = state.Name
		inputs["requestId"] = state.RequestId
		inputs["vlanDomain"] = state.VlanDomain
		inputs["vlanId"] = state.VlanId
	}
	s, err := ctx.ReadResource("solidserver:index/vLAN:VLAN", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &VLAN{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *VLAN) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *VLAN) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The name of the vlan to create.
func (r *VLAN) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// The optionally requested vlan ID.
func (r *VLAN) RequestId() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["requestId"])
}

// The name of the vlan domain.
func (r *VLAN) VlanDomain() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["vlanDomain"])
}

// The vlan ID.
func (r *VLAN) VlanId() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["vlanId"])
}

// Input properties used for looking up and filtering VLAN resources.
type VLANState struct {
	// The name of the vlan to create.
	Name interface{}
	// The optionally requested vlan ID.
	RequestId interface{}
	// The name of the vlan domain.
	VlanDomain interface{}
	// The vlan ID.
	VlanId interface{}
}

// The set of arguments for constructing a VLAN resource.
type VLANArgs struct {
	// The name of the vlan to create.
	Name interface{}
	// The optionally requested vlan ID.
	RequestId interface{}
	// The name of the vlan domain.
	VlanDomain interface{}
}
