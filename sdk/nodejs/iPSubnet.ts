// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class IPSubnet extends pulumi.CustomResource {
    /**
     * Get an existing IPSubnet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IPSubnetState, opts?: pulumi.CustomResourceOptions): IPSubnet {
        return new IPSubnet(name, <any>state, { ...opts, id: id });
    }

    /**
     * The name of the block intyo which creating the IP subnet.
     */
    public readonly block: pulumi.Output<string>;
    /**
     * The class associated to the IP subnet.
     */
    public readonly class: pulumi.Output<string | undefined>;
    /**
     * The class parameters associated to the IP subnet.
     */
    public readonly classParameters: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * The subnet's computed gateway.
     */
    public /*out*/ readonly gateway: pulumi.Output<string>;
    /**
     * Offset for creating the gateway. Default is 0 (No gateway).
     */
    public readonly gatewayOffset: pulumi.Output<number | undefined>;
    /**
     * The name of the IP subnet to create.
     */
    public readonly name: pulumi.Output<string>;
    /**
     * The provisionned IP prefix.
     */
    public /*out*/ readonly prefix: pulumi.Output<string>;
    /**
     * The expected IP subnet's prefix length (ex: 24 for a '/24').
     */
    public readonly size: pulumi.Output<number>;
    /**
     * The name of the space into which creating the subnet.
     */
    public readonly space: pulumi.Output<string>;
    /**
     * The terminal property of the IP subnet.
     */
    public readonly terminal: pulumi.Output<boolean | undefined>;

    /**
     * Create a IPSubnet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IPSubnetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IPSubnetArgs | IPSubnetState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: IPSubnetState = argsOrState as IPSubnetState | undefined;
            inputs["block"] = state ? state.block : undefined;
            inputs["class"] = state ? state.class : undefined;
            inputs["classParameters"] = state ? state.classParameters : undefined;
            inputs["gateway"] = state ? state.gateway : undefined;
            inputs["gatewayOffset"] = state ? state.gatewayOffset : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["prefix"] = state ? state.prefix : undefined;
            inputs["size"] = state ? state.size : undefined;
            inputs["space"] = state ? state.space : undefined;
            inputs["terminal"] = state ? state.terminal : undefined;
        } else {
            const args = argsOrState as IPSubnetArgs | undefined;
            if (!args || args.block === undefined) {
                throw new Error("Missing required property 'block'");
            }
            if (!args || args.name === undefined) {
                throw new Error("Missing required property 'name'");
            }
            if (!args || args.size === undefined) {
                throw new Error("Missing required property 'size'");
            }
            if (!args || args.space === undefined) {
                throw new Error("Missing required property 'space'");
            }
            inputs["block"] = args ? args.block : undefined;
            inputs["class"] = args ? args.class : undefined;
            inputs["classParameters"] = args ? args.classParameters : undefined;
            inputs["gatewayOffset"] = args ? args.gatewayOffset : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["size"] = args ? args.size : undefined;
            inputs["space"] = args ? args.space : undefined;
            inputs["terminal"] = args ? args.terminal : undefined;
            inputs["gateway"] = undefined /*out*/;
            inputs["prefix"] = undefined /*out*/;
        }
        super("solidserver:index/iPSubnet:IPSubnet", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IPSubnet resources.
 */
export interface IPSubnetState {
    /**
     * The name of the block intyo which creating the IP subnet.
     */
    readonly block?: pulumi.Input<string>;
    /**
     * The class associated to the IP subnet.
     */
    readonly class?: pulumi.Input<string>;
    /**
     * The class parameters associated to the IP subnet.
     */
    readonly classParameters?: pulumi.Input<{[key: string]: any}>;
    /**
     * The subnet's computed gateway.
     */
    readonly gateway?: pulumi.Input<string>;
    /**
     * Offset for creating the gateway. Default is 0 (No gateway).
     */
    readonly gatewayOffset?: pulumi.Input<number>;
    /**
     * The name of the IP subnet to create.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The provisionned IP prefix.
     */
    readonly prefix?: pulumi.Input<string>;
    /**
     * The expected IP subnet's prefix length (ex: 24 for a '/24').
     */
    readonly size?: pulumi.Input<number>;
    /**
     * The name of the space into which creating the subnet.
     */
    readonly space?: pulumi.Input<string>;
    /**
     * The terminal property of the IP subnet.
     */
    readonly terminal?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a IPSubnet resource.
 */
export interface IPSubnetArgs {
    /**
     * The name of the block intyo which creating the IP subnet.
     */
    readonly block: pulumi.Input<string>;
    /**
     * The class associated to the IP subnet.
     */
    readonly class?: pulumi.Input<string>;
    /**
     * The class parameters associated to the IP subnet.
     */
    readonly classParameters?: pulumi.Input<{[key: string]: any}>;
    /**
     * Offset for creating the gateway. Default is 0 (No gateway).
     */
    readonly gatewayOffset?: pulumi.Input<number>;
    /**
     * The name of the IP subnet to create.
     */
    readonly name: pulumi.Input<string>;
    /**
     * The expected IP subnet's prefix length (ex: 24 for a '/24').
     */
    readonly size: pulumi.Input<number>;
    /**
     * The name of the space into which creating the subnet.
     */
    readonly space: pulumi.Input<string>;
    /**
     * The terminal property of the IP subnet.
     */
    readonly terminal?: pulumi.Input<boolean>;
}
