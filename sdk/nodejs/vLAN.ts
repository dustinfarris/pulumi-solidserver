// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class VLAN extends pulumi.CustomResource {
    /**
     * Get an existing VLAN resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VLANState, opts?: pulumi.CustomResourceOptions): VLAN {
        return new VLAN(name, <any>state, { ...opts, id: id });
    }

    /**
     * The name of the vlan to create.
     */
    public readonly name: pulumi.Output<string>;
    /**
     * The optionally requested vlan ID.
     */
    public readonly requestId: pulumi.Output<number | undefined>;
    /**
     * The name of the vlan domain.
     */
    public readonly vlanDomain: pulumi.Output<string>;
    /**
     * The vlan ID.
     */
    public /*out*/ readonly vlanId: pulumi.Output<number>;

    /**
     * Create a VLAN resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VLANArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VLANArgs | VLANState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: VLANState = argsOrState as VLANState | undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["requestId"] = state ? state.requestId : undefined;
            inputs["vlanDomain"] = state ? state.vlanDomain : undefined;
            inputs["vlanId"] = state ? state.vlanId : undefined;
        } else {
            const args = argsOrState as VLANArgs | undefined;
            if (!args || args.name === undefined) {
                throw new Error("Missing required property 'name'");
            }
            if (!args || args.vlanDomain === undefined) {
                throw new Error("Missing required property 'vlanDomain'");
            }
            inputs["name"] = args ? args.name : undefined;
            inputs["requestId"] = args ? args.requestId : undefined;
            inputs["vlanDomain"] = args ? args.vlanDomain : undefined;
            inputs["vlanId"] = undefined /*out*/;
        }
        super("solidserver:index/vLAN:VLAN", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VLAN resources.
 */
export interface VLANState {
    /**
     * The name of the vlan to create.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The optionally requested vlan ID.
     */
    readonly requestId?: pulumi.Input<number>;
    /**
     * The name of the vlan domain.
     */
    readonly vlanDomain?: pulumi.Input<string>;
    /**
     * The vlan ID.
     */
    readonly vlanId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a VLAN resource.
 */
export interface VLANArgs {
    /**
     * The name of the vlan to create.
     */
    readonly name: pulumi.Input<string>;
    /**
     * The optionally requested vlan ID.
     */
    readonly requestId?: pulumi.Input<number>;
    /**
     * The name of the vlan domain.
     */
    readonly vlanDomain: pulumi.Input<string>;
}
